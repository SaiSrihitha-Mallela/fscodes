/* Retrieve the names and salaries of employees who have the job title "SALESMAN" and earn more than 1500.

Expected Output Columns:
+------------+-----------+
| ename      | sal       |
+------------+-----------+


*/

-- database name is test
-- write your query here 

USE test; 
select ename , sal
FROM emp
where job = "SALESMAN" and sal>1500;


----------------------------------------------------------------------------------------------------
/* List all employees whose job title is either "MANAGER" or "ANALYST".

Expected Output Columns:
+------------+-----------+
| ename      | job       |
+------------+-----------+


*/
USE test; -- database name is test
-- write your query here

select ename , job
from emp
where job="MANAGER" or job = "ANALYST";
---------------------------------------------------------------------------------------------------------
/* Get all the details of employees who do not belong to department 20.

*/
USE test;

select * from emp where deptno != 20;
-----------------------------------------------------------------------------------------------------
/* Get the employee names and their commission details 
where the job is "CLERK" or the commission is more than 1000.

Expected Output Columns:
+--------+----------+---------+
| ename  | job      | comm    |
+--------+----------+---------+

*/
USE test;

select ename , job , comm
from emp
where job = "CLERK" or comm > 1000;
--------------------------------------------------------------------------------------------------------
/* Get the list of employees who do not have the job title "CLERK" or "SALESMAN".

Expected Output Columns:
+--------+----------+
| ename  | job      |
+--------+----------+

*/
USE test;

select ename, job
from emp 
where job not in ("CLERK","SALESMAN");
--------------------------------------------------------------------------------------------------------
/* Retrieve the names and salaries of employees who earn between 1000 and 3000 (inclusive).

Expected Output Columns:
+--------+----------+
| ename  | sal      |
+--------+----------+

*/
USE test;

select ename, sal 
from emp
where sal between 1000 and 3000;
-------------------------------------------------------------------------------------------------------
/* Retrieve employees who were hired between the years 1995 and 1999.

Expected Output Columns:
+--------+----------+
| ename  | hiredate |
+--------+----------+

*/
USE test;

select ename, hiredate
from emp 
where hiredate between '1995-01-01' and '1999-12-31';

-------------------------------------------------------------------------------------------------------------
/* Retrieve employees who earn a commission between 300 and 1000.

Expected Output Columns:
+--------+----------+
| ename  | comm     |
+--------+----------+

*/
USE test;

select ename , comm
from emp 
where comm between 300 and 1000;
-----------------------------------------------------------------------------------------------------------
/* Retrieve employees who are part of department numbers between 20 and 40.

Expected Output Columns:
+--------+----------+
| ename  | deptno   |
+--------+----------+

*/
USE test;

select ename , deptno
from emp 
where deptno between 20 and 40;

-------------------------------------------------------------------------------------------------------------
/* List all salary grades where the grade is between 2 and 4.

Expected Output Columns:
+------+----------+------------+
|grade |    losal |   hisal    |
+------+----------+------------+

*/
USE test;

select grade , losal, hisal
from salgrade
where grade between 2 and 4;
---------------------------------------------------------------------------------------------------------------
/* Get employees who are not managers and have a salary below 2000.

Expected Output Columns:
+------+----------+------------+
|ename |    job   |   sal      |
+------+----------+------------+

*/
USE test;

select ename, job , sal 
from emp
where job != 'managers' and sal < 2000;
--------------------------------------------------------------------------------------------------------------
/* Retrieve employees who do not report to any manager.

Expected Output Columns:
+------+----------+------------+
|ename |    job   |   mgr      |
+------+----------+------------+

*/
USE test;
select ename , job , mgr
from emp
where mgr is null;
---------------------------------------------------------------------------------------------------------------
/* Get clerks or analysts hired between 1996 and 2000

Expected Output Columns:
+------+-------+------------+
| ID   | Name  | StartDate  |
+------+-------+------------+

*/
USE test;

select empno as ID , ename as Name, hiredate as StartDate
from emp
where job in ("clerk","analyst") and  hiredate between '1996-01-01' and '2000-12-31';
-------------------------------------------------------------------------------------------------------------------
/* List employees with mgr 7788 or 7566 and sal < 3000

Expected Output Columns:
+----------+------+---------+
| Employee | Boss | Salary  |
+----------+------+---------+

*/
USE test;

select ename as Employee , mgr as Boss , sal as Salary
from emp
where mgr = 7788 or mgr = 7566 and sal > 3000;
-------------------------------------------------------------------------------------------------------------------
/* Retrieve employees with 'ar' anywhere in their name

Expected Output Columns:
+-------+--------+----------+------+------------+---------+---------+--------+
| empno | ename  | job      | mgr  | hiredate   | sal     | comm    | deptno |
+-------+--------+----------+------+------------+---------+---------+--------+

*/
USE test;

select * 
from emp
where ename like "%ar%";
------------------------------------------------------------------------------------------------------------------
/* Retrieve employees with exactly 5-letter names starting with 'K'.

Expected Output Columns:
+-------+--------+----------+------+------------+---------+---------+--------+
| empno | ename  | job      | mgr  | hiredate   | sal     | comm    | deptno |
+-------+--------+----------+------+------------+---------+---------+--------+

*/
USE test;
select *
from emp 
where ename like "K%____";
---------------------------------------------------------------------------------------------------------------------
/* Retrieve employees whose names do not end with 'n'.

Expected Output Columns:
+-------+--------+----------+------+------------+---------+---------+--------+
| empno | ename  | job      | mgr  | hiredate   | sal     | comm    | deptno |
+-------+--------+----------+------+------------+---------+---------+--------+

*/
USE test;

select *
from emp
where ename not like "%n";
-----------------------------------------------------------------------------------------------------------------------
/* Retrieve which employees have names starting with 'C' or 'S'.

Expected Output Columns:
+-------+--------+----------+------+------------+---------+---------+--------+
| empno | ename  | job      | mgr  | hiredate   | sal     | comm    | deptno |
+-------+--------+----------+------+------------+---------+---------+--------+

*/
USE test;

select * 
from emp 
where ename like "C%" or ename like "S%";
----------------------------------------------------------------------------------------------------------------------------
/* Perform Sum of salaries and commissions by dept 30 

Expected Output Columns:
+----------+------------+
| TotalPay | TotalBonus |
+----------+------------+

*/
USE test;

select sum(sal) as TotalPay , sum(comm) as TotalBonus
from emp 
where deptno = 30;
----------------------------------------------------------------------------------------------------------------------
/* Get Max and min salaries in dept 20 or 40

Expected Output Columns:
+------------+-----------+
| HighestPay | LowestPay |
+------------+-----------+

*/
USE test;

select MAX(sal) as HighestPay , MIN(sal) as LowestPay
from emp
where deptno = 20 or  deptno = 40;
---------------------------------------------------------------------------------------------------------------------------
/* Find employees who earn more than the average salary of all employees.

Expected Output Columns:
------------------------
+-------+---------+
| ename | sal     |
+-------+---------+

*/
USE test;

select * from emp;
select ename , sal from emp where sal > (select AVG(sal) from emp) ;
---------------------------------------------------------------------------------------------------------------------------
/* Find the name and salary of the highest-paid employee.

Expected Output Columns:
------------------------
+-------+---------+
| ename | sal     |
+-------+---------+

*/
USE test;

select ename , sal 
from emp
where sal = (select max(sal) from emp);

-------------------------------------------------------------------------------------------------------------------------------
/* Find employees who earn more than the highest-paid employee in department 10.

Expected Output Columns:
------------------------
+-------+---------+--------+
| ename | sal     | deptno |
+-------+---------+--------+

*/
USE test;

select ename , sal , deptno
from emp 
where sal > (select max(sal) from emp where deptno = 10);
-----------------------------------------------------------------------------------------------------------------------------
/* Find employees whose salary is higher than the salary of ‘SCOTT’.

Expected Output Columns:
------------------------
+-------+---------+
| ename | sal     |
+-------+---------+

*/
USE test;

select ename , sal 
from emp 
where sal > (select sal from emp where ename = "SCOTT");
----------------------------------------------------------------------------------------------------------------------------------
/* Find employee who have the same job title as 'FORD'.

Expected Output Columns:
------------------------
+-------+---------+
| ename | job     |
+-------+---------+

*/
USE test;

select ename , job
from emp 
where job in (select job from emp where ename = "FORD");
-------------------------------------------------------------------------------------------------------------------------------
/* Find departments that have at least one employee earning more than 3000.

Expected Output Columns:
------------------------
+--------+------------+
| deptno | dname      |
+--------+------------+

*/
USE test;



select * from dept;
select * from emp;
 
select dept.deptno , dept.dname
from dept 
join emp  on dept.deptno = emp.deptno
where sal > 3000;
-------------------------------------------------------------------------------------------------------------------------------
/* Find employees who were hired before all employees in department 30.

Expected Output Columns:
------------------------
+-------+------------+
| ename | hiredate   |
+-------+------------+

*/
USE test;

select ename , hiredate
from emp
where hiredate < (select min(hiredate) from emp where deptno = 30);
-----------------------------------------------------------------------------------------------------------------------------
/* Find employees who belong to departments located in 'Dallas'.

Expected Output Columns:
------------------------
+-------+--------+
| ename | deptno |
+-------+--------+

*/
USE test;

select emp.ename , emp.deptno
from emp 
join dept on dept.deptno = emp.deptno
where dept.location = "Dallas";
----------------------------------------------------------------------------------------------------------------------------------
/* Find the second highest salary from employees.

Expected Output Columns:
------------------------
+-----------------------+
| second_highest_salary |
+-----------------------+

*/
USE test;

select sal as second_highest_salary
from emp 
order by sal desc limit 1 offset 1 ;
------------------------------------------------------------------------------------------------------------------------------
/* Find employees who have the same manager as ‘BLAKE’.

Expected Output Columns:
------------------------
+-------+------+
| ename | mgr  |
+-------+------+

*/
USE test;

select ename , mgr
from emp 
where mgr = (select mgr from emp where ename = "BLAKE") and ename != "BLAKE";
-------------------------------------------------------------------------------------------------------------------------------
/* Find employees who belong to a department with no employees.

Expected Output Columns:
------------------------
+---------+
| dname   |
+---------+

*/
USE test;

SELECT d.dname 
FROM dept d
LEFT JOIN emp e ON d.deptno = e.deptno
WHERE e.deptno IS NULL;
---------------------------------------------------------------------------------------------------------------------------------
/* Find the department that has the most employees.

Expected Output Columns:
------------------------
+--------+----------------+
| deptno | employee_count |
+--------+----------------+

*/
USE test;

select deptno , count(empno) as employee_count
from emp
group by deptno
order by employee_count desc
limit 1;
-----------------------------------------------------------------------------------------------------------------------------
/* Find the department name where ‘JONES’ works.

Expected Output Columns:
------------------------
+----------+
| dname    |
+----------+

*/
USE test;

select dname
from dept 
join emp on dept.deptno = emp.deptno
where ename = "JONES";
------------------------------------------------------------------------------------------------------------------------------
/* Write a SQL query to find employees whose name contains ‘A’.

Expected Output Columns:
------------------------
+--------+-------+
| ename  | empno |
+--------+-------+

*/
USE test;

select ename , empno
from emp
where ename like "%A%";
-------------------------------------------------------------------------------------------------------------------------------
/* Retrieve employees who have a commission greater than their salary.

Expected Output Columns:
------------------------
+--------+-------+---------+---------+
| ename  | empno | sal     | comm    |
+--------+-------+---------+---------+

*/
USE test;

select ename , empno , sal , comm
from emp 
where sal < comm;
------------------------------------------------------------------------------------------------------------------------------
/* Write a SQL query to find all employees who do not receive a commission.

Expected Output Columns:
------------------------
+-------+-------+------+
| ename | empno | comm |
+-------+-------+------+

*/
USE test;

select ename , empno , comm
from emp 
where comm is NULL or comm = 0.00;
-----------------------------------------------------------------------------------------------------------------------------
/* Write a SQL query to count the number of employees who have a manager.

Expected Output Columns:
------------------------
+------------------------+
| employees_with_manager |
+------------------------+

*/
USE test;

select count(ename) as employees_with_manager
from emp
where mgr != "NULL";
----------------------------------------------------------------------------------------------------------------------------
/* Write a SQL query to find the difference between the highest and second highest salary.

Expected Output Columns:
------------------------
+-------------------+
| salary_difference |
+-------------------+

*/
USE test;

SELECT 
    (SELECT MAX(sal) FROM emp) - 
    (SELECT MAX(sal) FROM emp WHERE sal < (SELECT MAX(sal) FROM emp)) 
    AS salary_difference;
------------------------------------------------------------------------------------------------------------------------------
/* Write a SQL query to calculate the average salary and average commission of employees.

Expected Output Columns:
------------------------
+----------------+--------------------+
| Average Salary | Average Commission |
+----------------+--------------------+

*/
USE test;


select AVG(sal) as "Average Salary" , AVG(comm) as "Average Commission"
from emp;
---------------------------------------------------------------------------------------------------------------------------------
/* Write a SQL query to calculate the total salary and total commission for all employees.

Expected Output Columns:
------------------------
+--------------+------------------+
| Total Salary | Total Commission |
+--------------+------------------+

*/
USE test;

select sum(sal) as "Total Salary" , sum(comm) as "Total Commission"
from emp;
------------------------------------------------------------------------------------------------------------------------------

